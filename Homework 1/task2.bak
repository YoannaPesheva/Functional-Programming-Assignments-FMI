#lang racket
(define (num-apples year span)
  (define (helper copy-year iter sum)
    (cond
      [(and (negative? (- copy-year iter)) (>= (- copy-year 1) span))
       sum
      ]
      [(negative? (- copy-year iter))
       (+ sum (* (expt 0.8 (- copy-year 1)) 300))
      ]
      [(>= (- copy-year iter) span)
       (helper copy-year (add1 iter) sum)
      ]
      [else
       (helper copy-year (add1 iter) (+ sum (* (expt 0.8 (- copy-year iter)) 300 3)) )
      ]
     )
  )
  (helper year 2 0)
)